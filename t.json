
{
   "AWSTemplateFormatVersion": "2010-09-09",
   "Parameters": {
       "EnvironmentName": {
           "Description": "This is a prefixed to resource names",
           "Type": "String",
           "Default": "Udagram"
       },
       "VpcCIDER": {
           "Type": "String",
           "Default": "10.0.0.0/16"
       },
       "PublicSubnet1CIDER": {
           "Type": "String",
           "Default": "10.0.0.0/24"
       },
       "PublicSubnet2CIDER": {
           "Type": "String",
           "Default": "10.0.1.0/24"
       },
       "PrvSubnet1CIDER": {
           "Type": "String",
           "Default": "10.0.2.0/24"
       },
       "PrvSubnet2CIDER": {
           "Type": "String",
           "Default": "10.0.3.0/24"
       }
   },
   "Resources": {
       "UdacityVPC": {
           "Type": "AWS::EC2::VPC",
           "Properties": {
               "CidrBlock": {
                   "Ref": "VpcCIDER"
               },
               "EnableDnsHostnames": true,
               "Tags": [
                   {
                       "Key": "Name",
                       "Value": {
                           "Ref": "EnvironmentName"
                       }
                   }
               ]
           }
       },
       "UdacityIGW": {
           "Type": "AWS::EC2::InternetGateway",
           "Properties": {
               "Tags": [
                   {
                       "Key": "Name",
                       "Value": {
                           "Ref": "EnvironmentName"
                       }
                   }
               ]
           }
       },
       "VpcIGWAttachment": {
           "Type": "AWS::EC2::VPCGatewayAttachment",
           "Properties": {
               "InternetGatewayId": {
                   "Ref": "UdacityIGW"
               },
               "VpcId": {
                   "Ref": "UdacityVPC"
               }
           }
       },
       "ProfileWithRolesForOurApp": {
           "Type": "AWS::IAM::InstanceProfile",
           "Properties": {
               "Roles": [
                   "UdacityS3ReadOnlyEC2"
               ]
           }
       },
       "PrivateSubnet1": {
           "Type": "AWS::EC2::Subnet",
           "Properties": {
               "CidrBlock": {
                   "Ref": "PrvSubnet1CIDER"
               },
               "AvailabilityZone": {
                   "Fn::Select": [
                       "0",
                       {
                           "Fn::GetAZs": {
                               "Ref": "AWS::Region"
                           }
                       }
                   ]
               },
               "VpcId": {
                   "Ref": "UdacityVPC"
               }
           }
       },
       "PrivateSubnet2": {
           "Type": "AWS::EC2::Subnet",
           "Properties": {
               "CidrBlock": {
                   "Ref": "PrvSubnet2CIDER"
               },
               "AvailabilityZone": {
                   "Fn::Select": [
                       "1",
                       {
                           "Fn::GetAZs": {
                               "Ref": "AWS::Region"
                           }
                       }
                   ]
               },
               "VpcId": {
                   "Ref": "UdacityVPC"
               }
           }
       },
       "PrvSubnet1NAT": {
           "Type": "AWS::EC2::NatGateway",
           "Properties": {
               "SubnetId": {
                   "Ref": "PublicSubnet1"
               },
               "AllocationId": {
                   "Fn::GetAtt": [
                       "EIP1",
                       "AllocationId"
                   ]
               }
           }
       },
       "PrvSubnet2NAT": {
           "Type": "AWS::EC2::NatGateway",
           "Properties": {
               "SubnetId": {
                   "Ref": "PublicSubnet2"
               },
               "AllocationId": {
                   "Fn::GetAtt": [
                       "EIP2",
                       "AllocationId"
                   ]
               }
           }
       },
       "EIP1": {
           "Type": "AWS::EC2::EIP",
           "Properties": {
               "Domain": "vpc"
           },
           "DependsOn": [
               "VpcIGWAttachment"
           ]
       },
       "EIP2": {
           "Type": "AWS::EC2::EIP",
           "Properties": {
               "Domain": "vpc"
           },
           "DependsOn": [
               "VpcIGWAttachment"
           ]
       },
       "PrivateRouteTable1": {
           "Type": "AWS::EC2::RouteTable",
           "Properties": {
               "VpcId": {
                   "Ref": "UdacityVPC"
               }
           }
       },
       "PrivateRouteTableRoute1": {
           "Type": "AWS::EC2::Route",
           "Properties": {
               "DestinationCidrBlock": "0.0.0.0/0",
               "NatGatewayId": {
                   "Ref": "PrvSubnet2NAT"
               },
               "RouteTableId": {
                   "Ref": "PrivateRouteTable2"
               }
           },
           "DependsOn": [
               "VpcIGWAttachment"
           ],
           "Metadata": {
               "AWS::CloudFormation::Designer": {
                   "id": "c9095933-3d4b-400d-b4d1-33f87a979e7f"
               }
           }
       },
       "RouteTableAssociation1": {
           "Type": "AWS::EC2::SubnetRouteTableAssociation",
           "Properties": {
               "RouteTableId": {
                   "Ref": "PrivateRouteTable1"
               },
               "SubnetId": {
                   "Ref": "PrivateSubnet1"
               }
           }
       },
       "PrivateRouteTable2": {
           "Type": "AWS::EC2::RouteTable",
           "Properties": {
               "VpcId": {
                   "Ref": "UdacityVPC"
               }
           }
       },
       "RouteTableAssociation2": {
           "Type": "AWS::EC2::SubnetRouteTableAssociation",
           "Properties": {
               "RouteTableId": {
                   "Ref": "PrivateRouteTable2"
               },
               "SubnetId": {
                   "Ref": "PrivateSubnet2"
               }
           }
       },
       "PrivateRouteTable1Route1": {
           "Type": "AWS::EC2::Route",
           "Properties": {
               "DestinationCidrBlock": "0.0.0.0/0",
               "RouteTableId": {
                   "Ref": "PrivateRouteTable1"
               },
               "NatGatewayId": {
                   "Ref": "PrvSubnet1NAT"
               }
           }
       },
       "AutoScalingGroup1": {
           "Type": "AWS::AutoScaling::AutoScalingGroup",
           "Properties": {
               "MinSize": 2,
               "MaxSize": 2,
               "TargetGroupARNs": [
                   {
                       "Ref": "LoadBalancerTarget"
                   }
               ],
               "VPCZoneIdentifier": [
                   {
                       "Ref": "PrivateSubnet1"
                   }
               ],
               "LaunchConfigurationName": {
                   "Ref": "AutoScalingLuanchConfigInstance"
               },
               "Tags": [
                   {
                       "Key": "Name",
                       "Value": {
                           "Fn::Sub": "${EnvironmentName} AutoScaling Group 1 (AZ1)"
                       },
                       "PropagateAtLaunch": "true"
                   }
               ]
           }
       },
       "PrvSubnet1SecurityGroup": {
           "Type": "AWS::EC2::SecurityGroup",
           "Properties": {
               "GroupDescription": "PrivateSecurityGroup2",
               "VpcId": {
                   "Ref": "UdacityVPC"
               },
               "SecurityGroupIngress": [
                   {
                       "IpProtocol": "tcp",
                       "FromPort": 80,
                       "ToPort": 80,
                       "CidrIp": "0.0.0.0/0"
                   },
                   {
                       "IpProtocol": "tcp",
                       "FromPort": 22,
                       "ToPort": 22,
                       "CidrIp": "0.0.0.0/0"
                   }
               ],
               "SecurityGroupEgress": [
                   {
                       "IpProtocol": "tcp",
                       "FromPort": 0,
                       "ToPort": 65535,
                       "CidrIp": "0.0.0.0/0"
                   }
               ],
               "Tags": [
                   {
                       "Key": "Name",
                       "Value": {
                           "Fn::Sub": "${EnvironmentName} Private Subnet 1 Security Group"
                       }
                   }
               ]
           }
       },
       "AutoScalingLuanchConfigInstance": {
           "Type": "AWS::AutoScaling::LaunchConfiguration",
           "Properties": {
               "SecurityGroups": [
                   {
                       "Ref": "PrvSubnet1SecurityGroup"
                   }
               ],
               "IamInstanceProfile": {
                   "Ref": "ProfileWithRolesForOurApp"
               },
               "UserData": {
                   "Fn::Base64": {
                       "Fn::Sub": "#!/bin/bash\napt-get update -y\napt-get install unzip awscli -y\napt-get install apache2 -y\nsystemctl start apache2.service\ncd /var/www/html\naws s3 cp s3://udacity-demo-1/udacity.zip .\nunzip -o udacity.zip\n"
                   }
               },
               "BlockDeviceMappings": [
                   {
                       "DeviceName": "/dev/sdk",
                       "Ebs": {
                           "VolumeSize": "10"
                       }
                   }
               ],
               "InstanceType": "t2.micro",
               "ImageId": "ami-0d1cd67c26f5fca19"
           }
       },
       "PublicSecurityGroup": {
           "Type": "AWS::EC2::SecurityGroup",
           "Properties": {
               "VpcId": {
                   "Ref": "UdacityVPC"
               },
               "GroupDescription": "PublicSecurityGroup",
               "SecurityGroupIngress": [
                   {
                       "IpProtocol": "tcp",
                       "FromPort": 22,
                       "ToPort": 22,
                       "CidrIp": "0.0.0.0/0"
                   }
               ],
               "SecurityGroupEgress": [
                   {
                       "IpProtocol": "tcp",
                       "FromPort": 0,
                       "ToPort": 65535,
                       "CidrIp": "0.0.0.0/0"
                   }
               ],
               "Tags": [
                   {
                       "Key": "Name",
                       "Value": {
                           "Fn::Sub": "${EnvironmentName} Public Security Group"
                       }
                   }
               ]
           }
       },
       "PublicSubnet1": {
           "Type": "AWS::EC2::Subnet",
           "Properties": {
               "AvailabilityZone": {
                   "Fn::Select": [
                       "0",
                       {
                           "Fn::GetAZs": {
                               "Ref": "AWS::Region"
                           }
                       }
                   ]
               },
               "CidrBlock": {
                   "Ref": "PublicSubnet1CIDER"
               },
               "VpcId": {
                   "Ref": "UdacityVPC"
               },
               "Tags": [
                   {
                       "Key": "Name",
                       "Value": {
                           "Fn::Sub": "${EnvironmentName} Public Subnet 1 (AZ1)"
                       }
                   }
               ]
           }
       },
       "JumbingBoxInstance1": {
           "Type": "AWS::EC2::Instance",
           "Properties": {
               "InstanceType": "t2.micro",
               "ImageId": "ami-0d1cd67c26f5fca19",
               "NetworkInterfaces": [
                   {
                       "GroupSet": [
                           {
                               "Ref": "PublicSecurityGroup"
                           }
                       ],
                       "AssociatePublicIpAddress": "true",
                       "DeviceIndex": "0",
                       "SubnetId": {
                           "Ref": "PublicSubnet1"
                       }
                   }
               ]
           }
       },
       "PublicSubnet2": {
           "Type": "AWS::EC2::Subnet",
           "Properties": {
               "AvailabilityZone": {
                   "Fn::Select": [
                       "1",
                       {
                           "Fn::GetAZs": {
                               "Ref": "AWS::Region"
                           }
                       }
                   ]
               },
               "CidrBlock": {
                   "Ref": "PublicSubnet2CIDER"
               },
               "VpcId": {
                   "Ref": "UdacityVPC"
               },
               "Tags": [
                   {
                       "Key": "Name",
                       "Value": {
                           "Fn::Sub": "${EnvironmentName} Public Subnet 2 (AZ2)"
                       }
                   }
               ]
           }
       },
       "JumbingBoxInstance2": {
           "Type": "AWS::EC2::Instance",
           "Properties": {
               "InstanceType": "t2.micro",
               "ImageId": "ami-0d1cd67c26f5fca19",
               "NetworkInterfaces": [
                   {
                       "GroupSet": [
                           {
                               "Ref": "PublicSecurityGroup"
                           }
                       ],
                       "AssociatePublicIpAddress": "true",
                       "DeviceIndex": "0",
                       "SubnetId": {
                           "Ref": "PublicSubnet2"
                       }
                   }
               ]
           }
       },
       "PublicRouteTable1": {
           "Type": "AWS::EC2::RouteTable",
           "Properties": {
               "VpcId": {
                   "Ref": "UdacityVPC"
               }
           }
       },
       "PublicRouteTable2": {
           "Type": "AWS::EC2::RouteTable",
           "Properties": {
               "VpcId": {
                   "Ref": "UdacityVPC"
               }
           }
       },
       "PublicRouteTable1Association": {
           "Type": "AWS::EC2::SubnetRouteTableAssociation",
           "Properties": {
               "RouteTableId": {
                   "Ref": "PublicRouteTable1"
               },
               "SubnetId": {
                   "Ref": "PublicSubnet1"
               }
           }
       },
       "PublicRouteTable2Association": {
           "Type": "AWS::EC2::SubnetRouteTableAssociation",
           "Properties": {
               "RouteTableId": {
                   "Ref": "PublicRouteTable2"
               },
               "SubnetId": {
                   "Ref": "PublicSubnet2"
               }
           }
       },
       "PublicSubnet2Route1": {
           "Type": "AWS::EC2::Route",
           "Properties": {
               "DestinationCidrBlock": "0.0.0.0/0",
               "RouteTableId": {
                   "Ref": "PublicRouteTable2"
               },
               "GatewayId": {
                   "Ref": "UdacityIGW"
               }
           }
       },
       "PublicSubnet1Route1": {
           "Type": "AWS::EC2::Route",
           "Properties": {
               "DestinationCidrBlock": "0.0.0.0/0",
               "RouteTableId": {
                   "Ref": "PublicRouteTable1"
               },
               "GatewayId": {
                   "Ref": "UdacityIGW"
               }
           }
       },
       "AutoScalingGroup2": {
           "Type": "AWS::AutoScaling::AutoScalingGroup",
           "Properties": {
               "MinSize": 2,
               "MaxSize": 2,
               "TargetGroupARNs": [
                   {
                       "Ref": "LoadBalancerTarget"
                   }
               ],
               "VPCZoneIdentifier": [
                   {
                       "Ref": "PrivateSubnet2"
                   }
               ],
               "LaunchConfigurationName": {
                   "Ref": "AutoScalingLuanchConfigInstance"
               },
               "Tags": [
                   {
                       "Key": "Name",
                       "Value": {
                           "Fn::Sub": "${EnvironmentName} AutoScaling Group 2 (AZ2)"
                       },
                       "PropagateAtLaunch": "true"
                   }
               ]
           }
       },
       "LoadBalancerSecGroup": {
           "Type": "AWS::EC2::SecurityGroup",
           "Properties": {
               "GroupDescription": "LoadBalancerSecurityGroup",
               "SecurityGroupIngress": [
                   {
                       "IpProtocol": "tcp",
                       "FromPort": 80,
                       "ToPort": 80,
                       "CidrIp": "0.0.0.0/0"
                   }
               ],
               "SecurityGroupEgress": [
                   {
                       "IpProtocol": "tcp",
                       "FromPort": 80,
                       "ToPort": 80,
                       "CidrIp": "0.0.0.0/0"
                   }
               ],
               "VpcId": {
                   "Ref": "UdacityVPC"
               },
               "Tags": [
                   {
                       "Key": "Name",
                       "Value": {
                           "Fn::Sub": "${EnvironmentName} LoadBalancer Security Group"
                       }
                   }
               ]
           }
       },
       "LoadBalancer": {
           "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
           "Properties": {
               "Scheme": "internet-facing",
               "SecurityGroups": [
                   {
                       "Ref": "LoadBalancerSecGroup"
                   }
               ],
               "SubnetMappings": [
                   {
                       "SubnetId": {
                           "Ref": "PublicSubnet1"
                       }
                   },
                   {
                       "SubnetId": {
                           "Ref": "PublicSubnet2"
                       }
                   }
               ]
           }
       },
       "LoadBalancerListner": {
           "Type": "AWS::ElasticLoadBalancingV2::Listener",
           "Properties": {
               "DefaultActions": [
                   {
                       "Type": "forward",
                       "TargetGroupArn": {
                           "Ref": "LoadBalancerTarget"
                       }
                   }
               ],
               "Protocol": "HTTP",
               "Port": "80",
               "LoadBalancerArn": {
                   "Ref": "LoadBalancer"
               }
           }
       },
       "LoadBalancerTarget": {
           "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
           "Properties": {
               "VpcId": {
                   "Ref": "UdacityVPC"
               },
               "HealthCheckIntervalSeconds": "35",
               "HealthCheckPath": "/",
               "HealthCheckProtocol": "HTTP",
               "HealthCheckTimeoutSeconds": "30",
               "HealthyThresholdCount": "2",
               "Port": "80",
               "Protocol": "HTTP",
               "UnhealthyThresholdCount": "5"
           }
       },
       "ListenerRule": {
           "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
           "Properties": {
               "Actions": [
                   {
                       "Type": "forward",
                       "TargetGroupArn": {
                           "Ref": "LoadBalancerTarget"
                       }
                   }
               ],
               "Conditions": [
                   {
                       "Field": "path-pattern",
                       "Values": [
                           "/"
                       ]
                   }
               ],
               "ListenerArn": {
                   "Ref": "LoadBalancerListner"
               },
               "Priority": 1
           }
       }
   },
   "Outputs": {
       "ApplicationUrl": {
           "Description": "Application URL",
           "Value": {
               "Fn::Sub": "http://${LoadBalancer.DNSName}"
           }
       }
   }
}